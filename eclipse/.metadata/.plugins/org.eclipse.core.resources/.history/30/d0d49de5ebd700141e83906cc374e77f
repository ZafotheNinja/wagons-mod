package shultzy88.wagons.model;

import org.lwjgl.opengl.GL11;

import net.minecraft.client.model.ModelBase;
import net.minecraft.client.model.ModelRenderer;
import net.minecraft.entity.Entity;
import shultzy88.wagons.entity.EntityCoveredWagon;

public class ModelCoveredWagon extends ModelBase
{
	// chassis
	public ModelRenderer chassis;
	public ModelRenderer leftSidePanel;
	public ModelRenderer rightSidePanel;
	public ModelRenderer seatBot;
	public ModelRenderer seatMid;
	public ModelRenderer seatTop;
	public ModelRenderer backAxle;
	public ModelRenderer frontAxle;

	public ModelRenderer yoke;
	public ModelRenderer tongue;

	public ModelRenderer hubBL; // wheel hub on back left
	public ModelRenderer hubBR; // wheel hub on back right
	public ModelRenderer hubFL; // wheel hub on front left
	public ModelRenderer hubFR; // wheel hub on front right

	// spokes back left
	public ModelRenderer spoke1BL;
	public ModelRenderer spoke2BL;
	public ModelRenderer spoke3BL;
	public ModelRenderer spoke4BL;

	// spokes back right
	public ModelRenderer spoke1BR;
	public ModelRenderer spoke2BR;
	public ModelRenderer spoke3BR;
	public ModelRenderer spoke4BR;

	// spokes front left
	public ModelRenderer spoke1FL;
	public ModelRenderer spoke2FL;
	public ModelRenderer spoke3FL;
	public ModelRenderer spoke4FL;

	// spokes front right
	public ModelRenderer spoke1FR;
	public ModelRenderer spoke2FR;
	public ModelRenderer spoke3FR;
	public ModelRenderer spoke4FR;

	// wheels back left
	public ModelRenderer wheel1BL;
	public ModelRenderer wheel2BL;
	public ModelRenderer wheel3BL;
	public ModelRenderer wheel4BL;

	// wheels back right
	public ModelRenderer wheel1BR;
	public ModelRenderer wheel2BR;
	public ModelRenderer wheel3BR;
	public ModelRenderer wheel4BR;

	// wheels front left
	public ModelRenderer wheel1FL;
	public ModelRenderer wheel2FL;
	public ModelRenderer wheel3FL;
	public ModelRenderer wheel4FL;

	// wheels front right
	public ModelRenderer wheel1FR;
	public ModelRenderer wheel2FR;
	public ModelRenderer wheel4FR;
	public ModelRenderer wheel3FR;

	// cover
	public ModelRenderer coverDiagLeft;
	public ModelRenderer coverDiagRight;
	public ModelRenderer coverLeft;
	public ModelRenderer coverRight;
	public ModelRenderer coverTop;

	public int textureWidth = 256;
	public int textureHeight = 128;

	/**
	 * 
	 */
	public ModelCoveredWagon()
	{
		chassis = new ModelRenderer(this, 96, 0);
		chassis.addBox(-16F, -1F, -24F, 32, 1, 48);
		chassis.setRotationPoint(0F, 8F, 0F);
		chassis.setTextureSize(textureWidth, textureHeight);
		chassis.setTextureOffset(81, 42).addBox(-15F, -5F, -20F, 30, 4, 1); // seat
		chassis.setTextureOffset(69, 33).addBox(-15F, -6F, -20F, 30, 1, 7);
		chassis.setTextureOffset(81, 24).addBox(-15F, -12F, -13F, 30, 7, 1);
		chassis.setTextureOffset(159, 50).addBox(15F, -11F, -24F, 1, 11, 48); // sides
		chassis.setTextureOffset(159, 50).addBox(-16F, -11F, -24F, 1, 11, 48);

		frontAxle = new ModelRenderer(this, 0, 14);
		frontAxle.addBox(-20F, 0F, -16F, 40, 2, 2);
		frontAxle.setRotationPoint(0F, 8F, 0F);
		frontAxle.setTextureSize(textureWidth, textureHeight);

		backAxle = new ModelRenderer(this, 0, 19);
		backAxle.addBox(-20F, 0F, 17F, 40, 2, 2);
		backAxle.setRotationPoint(0F, 8F, 0F);
		backAxle.setTextureSize(textureWidth, textureHeight);
		
		yoke = new ModelRenderer(this, 0, 58);
		yoke.addBox(-10F, -1F, -49F, 20, 1, 1);
		yoke.setRotationPoint(0F, 8F, 0F);
		
		tongue = new ModelRenderer(this, 0, 24);
		tongue.addBox(0.5F, 16F, -1F, 1, 1, 32);
		tongue.setRotationPoint(0F, 8F, 0F);
		
		hubBL = new ModelRenderer(this, 15, 0);
		hubBL.addBox(0F, -1.5F, -2F, 2, 3, 3);
		hubBL.setRotationPoint(20F, 8F, 18F);
		hubBL.setTextureSize(textureWidth, textureHeight);

		hubBR = new ModelRenderer(this, 15, 0);
		hubBR.addBox(-2F, -2F, -2F, 2, 3, 3);
		hubBR.setRotationPoint(-20F, 8F, 18F);
		hubBR.setTextureSize(textureWidth, textureHeight);

		hubFL = new ModelRenderer(this, 15, 0);
		hubFL.addBox(0F, -2F, -2F, 2, 3, 3);
		hubFL.setRotationPoint(20F, 8F, -14F);
		hubFL.setTextureSize(textureWidth, textureHeight);

		hubFR = new ModelRenderer(this, 15, 0);
		hubFR.addBox(-2F, -2F, -2F, 2, 3, 3);
		hubFR.setRotationPoint(-20F, 8F, -14F);
		hubFR.setTextureSize(textureWidth, textureHeight);

		spoke1BL = new ModelRenderer(this, 0, 0);
		spoke1BL.addBox(0F, -6F, 0.5F, 1, 4, 1);
		hubBL.addChild(spoke1BL);

		spoke2BL = new ModelRenderer(this, 0, 0);
		spoke2BL.addBox(0F, -3F, -1F, 1, 4, 1);
		spoke2BL.rotateAngleX = degToRad(90);
//		hubBL.addChild(spoke2BL);

		spoke3BL = new ModelRenderer(this, 0, 0);
		spoke3BL.addBox(0F, -3F, -1F, 1, 4, 1);
		spoke3BL.rotateAngleX = degToRad(180);
//		hubBL.addChild(spoke3BL);

		spoke4BL = new ModelRenderer(this, 0, 0);
		spoke4BL.addBox(0F, -3F, -1F, 1, 4, 1);
		spoke4BL.rotateAngleX = degToRad(270);
//		hubBL.addChild(spoke4BL);

		spoke1BR = new ModelRenderer(this, 0, 0);
		spoke1BR.addBox(0F, 2F, -1F, 1, 4, 2);
//		hubBR.addChild(spoke1BR);

		spoke2BR = new ModelRenderer(this, 0, 0);
		spoke2BR.addBox(0F, 0F, -1F, 1, 4, 2);
		spoke2BR.rotateAngleX = degToRad(90);

		spoke3BR = new ModelRenderer(this, 0, 0);
		spoke3BR.addBox(0F, 2F, -1F, 1, 4, 2);
		spoke3BR.setRotationPoint(-21F, 7F, 17F);
		spoke3BR.rotateAngleX = 3.141592653589793F;

		spoke4BR = new ModelRenderer(this, 0, 0);
		spoke4BR.addBox(0F, 2F, -1F, 1, 4, 2);
		spoke4BR.setRotationPoint(-21F, 7F, 17F);
		spoke4BR.rotateAngleX = 4.71238898038469F;

		spoke1FL = new ModelRenderer(this, 0, 0);
		spoke1FL.addBox(-1F, 2F, -1F, 1, 4, 2);
		spoke1FL.setRotationPoint(21F, 7F, -15F);

		spoke1FR = new ModelRenderer(this, 0, 0);
		spoke1FR.addBox(0F, 2F, -1F, 1, 4, 2);
		spoke1FR.setRotationPoint(-21F, 7F, -15F);

		spoke2FL = new ModelRenderer(this, 0, 0);
		spoke2FL.addBox(0F, 2F, -1F, 1, 4, 2);
		spoke2FL.setRotationPoint(20F, 7F, -15F);

		spoke3FL = new ModelRenderer(this, 0, 0);
		spoke3FL.addBox(-1F, 2F, -1F, 1, 4, 2);
		spoke3FL.setRotationPoint(21F, 7F, -15F);

		spoke2FR = new ModelRenderer(this, 0, 0);
		spoke2FR.addBox(0F, 2F, -1F, 1, 4, 2);
		spoke2FR.setRotationPoint(-21F, 7F, -15F);

		spoke3FR = new ModelRenderer(this, 0, 0);
		spoke3FR.addBox(0F, 2F, -1F, 1, 4, 2);
		spoke3FR.setRotationPoint(-21F, 7F, -15F);

		spoke4FL = new ModelRenderer(this, 0, 0);
		spoke4FL.addBox(-1F, 2F, -1F, 1, 4, 2);
		spoke4FL.setRotationPoint(21F, 7F, -15F);

		spoke4FR = new ModelRenderer(this, 0, 0);
		spoke4FR.addBox(0F, 2F, -1F, 1, 4, 2);
		spoke4FR.setRotationPoint(-21F, 7F, -15F);

		wheel1BL = new ModelRenderer(this, 0, 0);
		wheel1BL.addBox(-1F, 6F, -6F, 1, 1, 12);
		wheel1BL.setRotationPoint(21F, 7F, 17F);

		wheel1BR = new ModelRenderer(this, 0, 0);
		wheel1BR.addBox(0F, 6F, -6F, 1, 1, 12);
		wheel1BR.setRotationPoint(-21F, 7F, 17F);

		wheel1FL = new ModelRenderer(this, 0, 0);
		wheel1FL.addBox(-1F, 6F, -6F, 1, 1, 12);
		wheel1FL.setRotationPoint(21F, 7F, -15F);

		wheel1FR = new ModelRenderer(this, 0, 0);
		wheel1FR.addBox(0F, 6F, -6F, 1, 1, 12);
		wheel1FR.setRotationPoint(-21F, 7F, -15F);

		wheel2BL = new ModelRenderer(this, 0, 0);
		wheel2BL.addBox(-1F, 6F, -6F, 1, 1, 12);
		wheel2BL.setRotationPoint(21F, 7F, 17F);
		wheel2BL.rotateAngleX = 1.5707963267948966F;

		wheel2BR = new ModelRenderer(this, 0, 0);
		wheel2BR.addBox(0F, 6F, -6F, 1, 1, 12);
		wheel2BR.setRotationPoint(-21F, 7F, 17F);
		wheel2BR.rotateAngleX = 1.5707963267948966F;

		wheel2FL = new ModelRenderer(this, 0, 0);
		wheel2FL.addBox(-1F, 6F, -6F, 1, 1, 12);
		wheel2FL.setRotationPoint(21F, 7F, -15F);

		wheel2FR = new ModelRenderer(this, 0, 0);
		wheel2FR.addBox(0F, 6F, -6F, 1, 1, 12);
		wheel2FR.setRotationPoint(-21F, 7F, -15F);

		wheel3BL = new ModelRenderer(this, 0, 0);
		wheel3BL.addBox(-1F, 6F, -6F, 1, 1, 12);
		wheel3BL.setRotationPoint(21F, 7F, 17F);
		wheel3BL.rotateAngleX = 3.141592653589793F;

		wheel3BR = new ModelRenderer(this, 0, 0);
		wheel3BR.addBox(0F, 6F, -6F, 1, 1, 12);
		wheel3BR.setRotationPoint(-21F, 7F, 17F);
		wheel3BR.rotateAngleX = 3.141592653589793F;

		wheel3FL = new ModelRenderer(this, 0, 0);
		wheel3FL.addBox(-1F, 6F, -6F, 1, 1, 12);
		wheel3FL.setRotationPoint(21F, 7F, -15F);

		wheel3FR = new ModelRenderer(this, 0, 0);
		wheel3FR.addBox(0F, 6F, -6F, 1, 1, 12);
		wheel3FR.setRotationPoint(-21F, 7F, -15F);

		wheel4BL = new ModelRenderer(this, 0, 0);
		wheel4BL.addBox(-1F, 6F, -6F, 1, 1, 12);
		wheel4BL.setRotationPoint(21F, 7F, 17F);
		wheel4BL.rotateAngleX = 4.71238898038469F;

		wheel4BR = new ModelRenderer(this, 0, 0);
		wheel4BR.addBox(0F, 6F, -6F, 1, 1, 12);
		wheel4BR.setRotationPoint(-21F, 7F, 17F);
		wheel4BR.rotateAngleX = this.degToRad(270);

		wheel4FL = new ModelRenderer(this, 0, 0);
		wheel4FL.addBox(-1F, 6F, -6F, 1, 1, 12);
		wheel4FL.setRotationPoint(21F, 7F, -15F);

		wheel4FR = new ModelRenderer(this, 0, 0);
		wheel4FR.addBox(0F, 6F, -6F, 1, 1, 12);
		wheel4FR.setRotationPoint(-21F, 7F, -15F);
		wheel4FR.rotateAngleX = this.degToRad(270);

		coverDiagLeft = new ModelRenderer(this, 0, 80);
		coverDiagLeft.addBox(30F, 8F, -15F, 1, 9, 39);
		coverDiagLeft.setRotationPoint(0F, 8F, 0F);
		coverDiagLeft.rotateAngleZ = 5.497787143782138F;

		coverDiagRight = new ModelRenderer(this, 0, 80);
		coverDiagRight.addBox(-31F, 8F, -15F, 1, 9, 39);
		coverDiagRight.setRotationPoint(0F, 8F, 0F);
		coverDiagRight.rotateAngleZ = 0.7853981633974483F;

		coverLeft = new ModelRenderer(this, 96, 110);
		coverLeft.addBox(-15F, 12F, -16F, 39, 15, 1);
		coverLeft.setRotationPoint(0F, 8F, 0F);
		coverLeft.rotateAngleY = 1.5707963267948966F;

		coverRight = new ModelRenderer(this, 96, 93);
		coverRight.addBox(-24F, 12F, -16F, 39, 15, 1);
		coverRight.setRotationPoint(0F, 8F, 0F);
		coverRight.rotateAngleY = 4.71238898038469F;

		coverTop = new ModelRenderer(this, 138, 88);
		coverTop.addBox(-10F, 33F, -15F, 20, 1, 39);
		coverTop.setRotationPoint(0F, 8F, 0F);
	}

	@Override
	public void render(Entity entity, float time, float swingSuppress, float par4,
			float parAngleY, float parAngleX, float par7)
	{
		renderCoveredWagon((EntityCoveredWagon) entity, time, swingSuppress, par4,
				parAngleY, parAngleX, par7);

	}

	private void renderCoveredWagon(EntityCoveredWagon entity, float time,
			float swingSuppress, float par4, float parAngleY, float parAngleX, float par7)
	{
		// animate the entity
//		setRotationAngles(time, swingSuppress, par4, parAngleY, parAngleX, par7, entity);

		spinX(hubBL);
		
		GL11.glPushMatrix();
		chassis.render(par7);
		frontAxle.render(par7);
		backAxle.render(par7);
		hubBL.render(par7);
		hubBR.render(par7);
		hubFL.render(par7);
		hubFR.render(par7);
		GL11.glPopMatrix();
	}

	@Override
	public void setRotationAngles(float time, float swingSuppress, float par3,
			float angleY, float angleX, float par6, Entity entity)
	{
		
	}

	@Override
	protected void setTextureOffset(String textureName, int offsetX, int offsetY)
	{
		super.setTextureOffset(textureName, offsetX, offsetY);
	}

	/**
	 * Convert degrees to radians
	 * 
	 * @param degrees
	 * @return
	 */
	private float degToRad(float degrees)
	{
		return degrees * (float) Math.PI / 180;
	}
	
	protected void setRotation(ModelRenderer model, float rotX, float rotY, float rotZ)
	{
		model.rotateAngleX = degToRad(rotX);
		model.rotateAngleY = degToRad(rotY);
		model.rotateAngleZ = degToRad(rotZ);
	}
	
	// spin methods are good for testing and debug rotation points and offsets in the model
	protected void spinX(ModelRenderer model)
	{
		model.rotateAngleX += degToRad(0.5F);
	}
	
	protected void spinY(ModelRenderer model)
	{
		model.rotateAngleY += degToRad(0.5F);
	}
	
	protected void spinZ(ModelRenderer model)
	{
		model.rotateAngleZ += degToRad(0.5F);
	}
}
